/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ucJugadores.java
 *
 * Created on 11-05-2011, 01:38:48 PM
 */
package uno;

import javax.swing.JOptionPane;


public class ucJugadores extends javax.swing.JPanel {

    public boolean seleccionado=false;
    private boolean juegonuevo=false;
    private int edad =0;
    private char genero;
    private String foto="";
    private int codigo =0;
    public boolean eliminado=false;
    public int puntos=0;
    public String Nombre()
    {
        return this.jnombre.getText();
    }
    
    public String Foto()
    {
        return foto;
    }
    
    public char Genero()
    {
        return genero;
    }
    
    public int Edad()
    {
        return edad;
    }
    
    public int Codigo()
    {
        return codigo;
    }
    
    public ucJugadores(String nombre,String edad,String genero,String foto,int cod,boolean EsNuevoJuego,int puntos) {
        initComponents();
        
        this.genero=genero.charAt(0);
        juegonuevo=EsNuevoJuego;
        jListanegra.setVisible(false);
        jListanegra.setToolTipText(nombre + String.format(" sera eliminad%s luego de presionar continuar y confirmes",(this.genero=='F'?"a":"o" )));
        
        jnombre.setText(nombre);
        jedad.setText(edad +" a√±os");
        this.edad= Integer.parseInt(edad);
        
        this.codigo=cod;
        this.foto=foto;
        this.puntos=puntos;
        jsexo.setText( genero.equalsIgnoreCase("H")?"Hombre":"Mujer");
        jpicture1.setIcon(Imagenes.getFoto(jpicture1, foto));
        jpicture1.setToolTipText("Haz click para seleccionar a " + nombre);
        jpuntos.setText("");
        jpuntos.setText( String.valueOf(puntos) +" puntos." );
        jSelectJugador.setVisible(EsNuevoJuego);
        jAddListaNegra.setVisible(!EsNuevoJuego);
        //jDetalles.setVisible(!EsNuevoJuego);
        jDetalles.setVisible(false); //se deja invisible porque no se implemento
       
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jnombre = new javax.swing.JLabel();
        jsexo = new javax.swing.JLabel();
        jedad = new javax.swing.JLabel();
        jpicture1 = new javax.swing.JLabel();
        jDetalles = new javax.swing.JLabel();
        jAddListaNegra = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSelectJugador = new javax.swing.JLabel();
        jListanegra = new javax.swing.JLabel();
        jpuntos = new javax.swing.JLabel();

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(uno.UnoApp.class).getContext().getResourceMap(ucJugadores.class);
        setBackground(resourceMap.getColor("Form.background")); // NOI18N
        setBorder(new javax.swing.border.LineBorder(resourceMap.getColor("Form.border.lineColor"), 2, true)); // NOI18N
        setName("Form"); // NOI18N
        setPreferredSize(new java.awt.Dimension(661, 150));
        setRequestFocusEnabled(false);
        setLayout(null);

        jnombre.setFont(resourceMap.getFont("jnombre.font")); // NOI18N
        jnombre.setForeground(resourceMap.getColor("jnombre.foreground")); // NOI18N
        jnombre.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jnombre.setText(resourceMap.getString("jnombre.text")); // NOI18N
        jnombre.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jnombre.setName("jnombre"); // NOI18N
        add(jnombre);
        jnombre.setBounds(170, 20, 150, 30);

        jsexo.setFont(resourceMap.getFont("jsexo.font")); // NOI18N
        jsexo.setForeground(resourceMap.getColor("jsexo.foreground")); // NOI18N
        jsexo.setText(resourceMap.getString("jsexo.text")); // NOI18N
        jsexo.setName("jsexo"); // NOI18N
        add(jsexo);
        jsexo.setBounds(180, 70, 50, 20);

        jedad.setFont(resourceMap.getFont("jedad.font")); // NOI18N
        jedad.setForeground(resourceMap.getColor("jedad.foreground")); // NOI18N
        jedad.setText(resourceMap.getString("jedad.text")); // NOI18N
        jedad.setName("jedad"); // NOI18N
        add(jedad);
        jedad.setBounds(250, 70, 50, 20);

        jpicture1.setBackground(resourceMap.getColor("jpicture1.background")); // NOI18N
        jpicture1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jpicture1.setBorder(new javax.swing.border.LineBorder(resourceMap.getColor("jpicture1.border.lineColor"), 2, true)); // NOI18N
        jpicture1.setName("jpicture1"); // NOI18N
        jpicture1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jpicture1MouseClicked(evt);
            }
        });
        add(jpicture1);
        jpicture1.setBounds(0, 0, 168, 206);

        jDetalles.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uno/resources/user_data.png"))); // NOI18N
        jDetalles.setText(resourceMap.getString("jDetalles.text")); // NOI18N
        jDetalles.setName("jDetalles"); // NOI18N
        jDetalles.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jDetallesMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jDetallesMouseExited(evt);
            }
        });
        add(jDetalles);
        jDetalles.setBounds(260, 90, 40, 40);

        jAddListaNegra.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uno/resources/delete_user.png"))); // NOI18N
        jAddListaNegra.setText(resourceMap.getString("jAddListaNegra.text")); // NOI18N
        jAddListaNegra.setToolTipText(resourceMap.getString("jAddListaNegra.toolTipText")); // NOI18N
        jAddListaNegra.setName("jAddListaNegra"); // NOI18N
        jAddListaNegra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jAddListaNegraMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jAddListaNegraMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jAddListaNegraMouseExited(evt);
            }
        });
        add(jAddListaNegra);
        jAddListaNegra.setBounds(180, 89, 30, 40);

        jLabel3.setFont(resourceMap.getFont("jLabel3.font")); // NOI18N
        jLabel3.setForeground(resourceMap.getColor("jLabel3.foreground")); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel3.setName("jLabel3"); // NOI18N
        jLabel3.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        add(jLabel3);
        jLabel3.setBounds(165, 110, 160, 30);

        jSelectJugador.setIcon(resourceMap.getIcon("jSelectJugador.icon")); // NOI18N
        jSelectJugador.setText(resourceMap.getString("jSelectJugador.text")); // NOI18N
        jSelectJugador.setToolTipText(resourceMap.getString("jSelectJugador.toolTipText")); // NOI18N
        jSelectJugador.setName("jSelectJugador"); // NOI18N
        jSelectJugador.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSelectJugadorMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jSelectJugadorMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jSelectJugadorMouseExited(evt);
            }
        });
        add(jSelectJugador);
        jSelectJugador.setBounds(210, 141, 90, 60);

        jListanegra.setIcon(resourceMap.getIcon("jListanegra.icon")); // NOI18N
        jListanegra.setText(resourceMap.getString("jListanegra.text")); // NOI18N
        jListanegra.setName("jListanegra"); // NOI18N
        jListanegra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListanegraMouseClicked(evt);
            }
        });
        add(jListanegra);
        jListanegra.setBounds(290, 0, 30, 20);

        jpuntos.setFont(resourceMap.getFont("jpuntos.font")); // NOI18N
        jpuntos.setForeground(resourceMap.getColor("jpuntos.foreground")); // NOI18N
        jpuntos.setText(resourceMap.getString("jpuntos.text")); // NOI18N
        jpuntos.setName("jpuntos"); // NOI18N
        add(jpuntos);
        jpuntos.setBounds(180, 50, 130, 20);
    }// </editor-fold>//GEN-END:initComponents

private void jSelectJugadorMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSelectJugadorMouseEntered
    if (seleccionado)
    {
    jSelectJugador.setIcon(Imagenes.OKsetOver());    
    
    }
    else{
        jSelectJugador.setIcon(Imagenes.OKOver());
    }
    
}//GEN-LAST:event_jSelectJugadorMouseEntered

private void jSelectJugadorMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSelectJugadorMouseExited
 if (seleccionado)
    {
    jSelectJugador.setIcon(Imagenes.OKset());    
    
    }
    else{
        jSelectJugador.setIcon(Imagenes.OK());
    }
}//GEN-LAST:event_jSelectJugadorMouseExited

private void check(){
    
    if (!juegonuevo)
    {
        return;
    }
    
    if (eliminado)
    {
        Util.Messaje(String.format("Est%s jugador%s se encuentra en la lista negra, no lo puede seleccionar",(genero=='F'?"a":"e" ),(genero=='F'?"a":"" )));
     
       return;    
    }
    
   if (seleccionado==true)
     {
         seleccionado=false;
         jSelectJugador.setIcon(Imagenes.OKOver());
     }
  else
     {
         seleccionado=true;
         jSelectJugador.setIcon(Imagenes.OKset());
     } 
}

private void jSelectJugadorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSelectJugadorMouseClicked
    check();
}//GEN-LAST:event_jSelectJugadorMouseClicked

private void jpicture1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpicture1MouseClicked
    check();
}//GEN-LAST:event_jpicture1MouseClicked

private void jAddListaNegraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jAddListaNegraMouseClicked

    if (eliminado)
    {
        Util.Messaje(String.format("%s se encuentra en la lista negra.", Nombre()));
        return;
    }
    
    if (JOptionPane.showConfirmDialog(this, String.format("A√±adir a %s en la lista negra ?", Nombre()))==0)
{
        seleccionado=false;
        eliminado=true;
        jSelectJugador.setIcon(Imagenes.OK());
        jnombre.setForeground(java.awt.Color.red);
        jListanegra.setVisible(true);
        //Util.Messaje ( String.format("Jugador%s en lista negra",(genero=='F'?"a":"" )));
}

}//GEN-LAST:event_jAddListaNegraMouseClicked

private void jAddListaNegraMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jAddListaNegraMouseEntered
jAddListaNegra.setIcon(Imagenes.DeleteUserOver());
}//GEN-LAST:event_jAddListaNegraMouseEntered

private void jAddListaNegraMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jAddListaNegraMouseExited
jAddListaNegra.setIcon(Imagenes.DeleteUser());
}//GEN-LAST:event_jAddListaNegraMouseExited

private void jDetallesMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jDetallesMouseEntered
 jDetalles.setIcon(Imagenes.UserDataOver());
}//GEN-LAST:event_jDetallesMouseEntered

private void jDetallesMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jDetallesMouseExited
jDetalles.setIcon(Imagenes.UserData());
}//GEN-LAST:event_jDetallesMouseExited

private void jListanegraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListanegraMouseClicked
 if (JOptionPane.showConfirmDialog(this, "Eliminar a " + Nombre() + " de la lista negra")==0)
 {
        seleccionado=false;
        eliminado=false;
        jSelectJugador.setIcon(Imagenes.OK());
        jnombre.setForeground(java.awt.Color.white);
        jListanegra.setVisible(false);
 }
}//GEN-LAST:event_jListanegraMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jAddListaNegra;
    private javax.swing.JLabel jDetalles;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jListanegra;
    private javax.swing.JLabel jSelectJugador;
    private javax.swing.JLabel jedad;
    private javax.swing.JLabel jnombre;
    private javax.swing.JLabel jpicture1;
    private javax.swing.JLabel jpuntos;
    private javax.swing.JLabel jsexo;
    // End of variables declaration//GEN-END:variables
}
